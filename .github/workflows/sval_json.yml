name: sval_json

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      
      - name: Install cargo-hack
        run: cargo install cargo-hack

      - name: Default features
        run: cd json; cargo test

      - name: No features
        run: cd json; cargo test --no-default-features
    
      - name: All features
        run: cd json; cargo test --all-features

      - name: Powerset
        run: cd json; cargo hack test --feature-powerset

  embedded:
    name: Build (embedded)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: thumbv6m-none-eabi
          override: true

      - name: Default features
        run: cd json; cargo build -Z avoid-dev-deps --target thumbv6m-none-eabi

  wasm:
    name: Test (wasm)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Default features
        run: cd json; wasm-pack test --headless --firefox

  nodeps:
    name: Build (no dev deps)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Default features
        run: cd json; cargo build -Z avoid-dev-deps

      - name: No features
        run: cd json; cargo build -Z avoid-dev-deps --no-default-features

      - name: All features
        run: cd json; cargo build -Z avoid-dev-deps --all-features
